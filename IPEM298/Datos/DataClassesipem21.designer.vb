'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.18444
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="IPEM2")>  _
Partial Public Class DataClassesipem2DataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Definiciones de métodos de extensibilidad"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertAsistencia_docente(instance As Asistencia_docente)
    End Sub
  Partial Private Sub UpdateAsistencia_docente(instance As Asistencia_docente)
    End Sub
  Partial Private Sub DeleteAsistencia_docente(instance As Asistencia_docente)
    End Sub
  Partial Private Sub InsertModulo(instance As Modulo)
    End Sub
  Partial Private Sub UpdateModulo(instance As Modulo)
    End Sub
  Partial Private Sub DeleteModulo(instance As Modulo)
    End Sub
  Partial Private Sub InsertCurso(instance As Curso)
    End Sub
  Partial Private Sub UpdateCurso(instance As Curso)
    End Sub
  Partial Private Sub DeleteCurso(instance As Curso)
    End Sub
  Partial Private Sub InsertModulo_x_Curso(instance As Modulo_x_Curso)
    End Sub
  Partial Private Sub UpdateModulo_x_Curso(instance As Modulo_x_Curso)
    End Sub
  Partial Private Sub DeleteModulo_x_Curso(instance As Modulo_x_Curso)
    End Sub
  Partial Private Sub InsertHorario_personal(instance As Horario_personal)
    End Sub
  Partial Private Sub UpdateHorario_personal(instance As Horario_personal)
    End Sub
  Partial Private Sub DeleteHorario_personal(instance As Horario_personal)
    End Sub
  Partial Private Sub InsertAlumno_x_curso(instance As Alumno_x_curso)
    End Sub
  Partial Private Sub UpdateAlumno_x_curso(instance As Alumno_x_curso)
    End Sub
  Partial Private Sub DeleteAlumno_x_curso(instance As Alumno_x_curso)
    End Sub
  Partial Private Sub InsertAlumno_x_materia(instance As Alumno_x_materia)
    End Sub
  Partial Private Sub UpdateAlumno_x_materia(instance As Alumno_x_materia)
    End Sub
  Partial Private Sub DeleteAlumno_x_materia(instance As Alumno_x_materia)
    End Sub
  Partial Private Sub InsertPersonal(instance As Personal)
    End Sub
  Partial Private Sub UpdatePersonal(instance As Personal)
    End Sub
  Partial Private Sub DeletePersonal(instance As Personal)
    End Sub
  Partial Private Sub InsertAsistencia_alumnos(instance As Asistencia_alumnos)
    End Sub
  Partial Private Sub UpdateAsistencia_alumnos(instance As Asistencia_alumnos)
    End Sub
  Partial Private Sub DeleteAsistencia_alumnos(instance As Asistencia_alumnos)
    End Sub
  Partial Private Sub InsertAlumno(instance As Alumno)
    End Sub
  Partial Private Sub UpdateAlumno(instance As Alumno)
    End Sub
  Partial Private Sub DeleteAlumno(instance As Alumno)
    End Sub
  Partial Private Sub InsertUsuario1(instance As Usuario1)
    End Sub
  Partial Private Sub UpdateUsuario1(instance As Usuario1)
    End Sub
  Partial Private Sub DeleteUsuario1(instance As Usuario1)
    End Sub
  Partial Private Sub InsertProfesor_x_Materia(instance As Profesor_x_Materia)
    End Sub
  Partial Private Sub UpdateProfesor_x_Materia(instance As Profesor_x_Materia)
    End Sub
  Partial Private Sub DeleteProfesor_x_Materia(instance As Profesor_x_Materia)
    End Sub
  Partial Private Sub InsertMateria(instance As Materia)
    End Sub
  Partial Private Sub UpdateMateria(instance As Materia)
    End Sub
  Partial Private Sub DeleteMateria(instance As Materia)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.IPEM298.My.MySettings.Default.notebook, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Asistencia_docentes() As System.Data.Linq.Table(Of Asistencia_docente)
		Get
			Return Me.GetTable(Of Asistencia_docente)
		End Get
	End Property
	
	Public ReadOnly Property Modulo() As System.Data.Linq.Table(Of Modulo)
		Get
			Return Me.GetTable(Of Modulo)
		End Get
	End Property
	
	Public ReadOnly Property Curso() As System.Data.Linq.Table(Of Curso)
		Get
			Return Me.GetTable(Of Curso)
		End Get
	End Property
	
	Public ReadOnly Property Modulo_x_Curso() As System.Data.Linq.Table(Of Modulo_x_Curso)
		Get
			Return Me.GetTable(Of Modulo_x_Curso)
		End Get
	End Property
	
	Public ReadOnly Property Horario_personal() As System.Data.Linq.Table(Of Horario_personal)
		Get
			Return Me.GetTable(Of Horario_personal)
		End Get
	End Property
	
	Public ReadOnly Property Alumno_x_curso() As System.Data.Linq.Table(Of Alumno_x_curso)
		Get
			Return Me.GetTable(Of Alumno_x_curso)
		End Get
	End Property
	
	Public ReadOnly Property Alumno_x_materia() As System.Data.Linq.Table(Of Alumno_x_materia)
		Get
			Return Me.GetTable(Of Alumno_x_materia)
		End Get
	End Property
	
	Public ReadOnly Property Personal() As System.Data.Linq.Table(Of Personal)
		Get
			Return Me.GetTable(Of Personal)
		End Get
	End Property
	
	Public ReadOnly Property Asistencia_alumnos() As System.Data.Linq.Table(Of Asistencia_alumnos)
		Get
			Return Me.GetTable(Of Asistencia_alumnos)
		End Get
	End Property
	
	Public ReadOnly Property Alumno() As System.Data.Linq.Table(Of Alumno)
		Get
			Return Me.GetTable(Of Alumno)
		End Get
	End Property
	
	Public ReadOnly Property Usuario1() As System.Data.Linq.Table(Of Usuario1)
		Get
			Return Me.GetTable(Of Usuario1)
		End Get
	End Property
	
	Public ReadOnly Property Profesor_x_Materia() As System.Data.Linq.Table(Of Profesor_x_Materia)
		Get
			Return Me.GetTable(Of Profesor_x_Materia)
		End Get
	End Property
	
	Public ReadOnly Property Materia() As System.Data.Linq.Table(Of Materia)
		Get
			Return Me.GetTable(Of Materia)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Asistencia_docente")>  _
Partial Public Class Asistencia_docente
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_asistencia_doc As Integer
	
	Private _fecha_asistencia As Date
	
	Private _id_horario As Integer
	
	Private _estado_textbox As String
	
	Private _observacion As String
	
	Private _Horario_personal As EntityRef(Of Horario_personal)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_asistencia_docChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_asistencia_docChanged()
    End Sub
    Partial Private Sub Onfecha_asistenciaChanging(value As Date)
    End Sub
    Partial Private Sub Onfecha_asistenciaChanged()
    End Sub
    Partial Private Sub Onid_horarioChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_horarioChanged()
    End Sub
    Partial Private Sub Onestado_textboxChanging(value As String)
    End Sub
    Partial Private Sub Onestado_textboxChanged()
    End Sub
    Partial Private Sub OnobservacionChanging(value As String)
    End Sub
    Partial Private Sub OnobservacionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Horario_personal = CType(Nothing, EntityRef(Of Horario_personal))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_asistencia_doc", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_asistencia_doc() As Integer
		Get
			Return Me._id_asistencia_doc
		End Get
		Set
			If ((Me._id_asistencia_doc = value)  _
						= false) Then
				Me.Onid_asistencia_docChanging(value)
				Me.SendPropertyChanging
				Me._id_asistencia_doc = value
				Me.SendPropertyChanged("id_asistencia_doc")
				Me.Onid_asistencia_docChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fecha_asistencia", DbType:="Date NOT NULL")>  _
	Public Property fecha_asistencia() As Date
		Get
			Return Me._fecha_asistencia
		End Get
		Set
			If ((Me._fecha_asistencia = value)  _
						= false) Then
				Me.Onfecha_asistenciaChanging(value)
				Me.SendPropertyChanging
				Me._fecha_asistencia = value
				Me.SendPropertyChanged("fecha_asistencia")
				Me.Onfecha_asistenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_horario", DbType:="Int NOT NULL")>  _
	Public Property id_horario() As Integer
		Get
			Return Me._id_horario
		End Get
		Set
			If ((Me._id_horario = value)  _
						= false) Then
				If Me._Horario_personal.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_horarioChanging(value)
				Me.SendPropertyChanging
				Me._id_horario = value
				Me.SendPropertyChanged("id_horario")
				Me.Onid_horarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_estado_textbox", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property estado_textbox() As String
		Get
			Return Me._estado_textbox
		End Get
		Set
			If (String.Equals(Me._estado_textbox, value) = false) Then
				Me.Onestado_textboxChanging(value)
				Me.SendPropertyChanging
				Me._estado_textbox = value
				Me.SendPropertyChanged("estado_textbox")
				Me.Onestado_textboxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_observacion", DbType:="NVarChar(50)")>  _
	Public Property observacion() As String
		Get
			Return Me._observacion
		End Get
		Set
			If (String.Equals(Me._observacion, value) = false) Then
				Me.OnobservacionChanging(value)
				Me.SendPropertyChanging
				Me._observacion = value
				Me.SendPropertyChanged("observacion")
				Me.OnobservacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Horario_personal_Asistencia_docente", Storage:="_Horario_personal", ThisKey:="id_horario", OtherKey:="id_horario", IsForeignKey:=true)>  _
	Public Property Horario_personal() As Horario_personal
		Get
			Return Me._Horario_personal.Entity
		End Get
		Set
			Dim previousValue As Horario_personal = Me._Horario_personal.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Horario_personal.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Horario_personal.Entity = Nothing
					previousValue.Asistencia_docente.Remove(Me)
				End If
				Me._Horario_personal.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Asistencia_docente.Add(Me)
					Me._id_horario = value.id_horario
				Else
					Me._id_horario = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("Horario_personal")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Modulo")>  _
Partial Public Class Modulo
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_modulo As Integer
	
	Private _numero As Integer
	
	Private _hora_inicio As System.TimeSpan
	
	Private _hora_fin As System.TimeSpan
	
	Private _turno_textbox As String
	
	Private _Modulo_x_Curso As EntitySet(Of Modulo_x_Curso)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_moduloChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_moduloChanged()
    End Sub
    Partial Private Sub OnnumeroChanging(value As Integer)
    End Sub
    Partial Private Sub OnnumeroChanged()
    End Sub
    Partial Private Sub Onhora_inicioChanging(value As System.TimeSpan)
    End Sub
    Partial Private Sub Onhora_inicioChanged()
    End Sub
    Partial Private Sub Onhora_finChanging(value As System.TimeSpan)
    End Sub
    Partial Private Sub Onhora_finChanged()
    End Sub
    Partial Private Sub Onturno_textboxChanging(value As String)
    End Sub
    Partial Private Sub Onturno_textboxChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Modulo_x_Curso = New EntitySet(Of Modulo_x_Curso)(AddressOf Me.attach_Modulo_x_Curso, AddressOf Me.detach_Modulo_x_Curso)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_modulo", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_modulo() As Integer
		Get
			Return Me._id_modulo
		End Get
		Set
			If ((Me._id_modulo = value)  _
						= false) Then
				Me.Onid_moduloChanging(value)
				Me.SendPropertyChanging
				Me._id_modulo = value
				Me.SendPropertyChanged("id_modulo")
				Me.Onid_moduloChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_numero", DbType:="Int NOT NULL")>  _
	Public Property numero() As Integer
		Get
			Return Me._numero
		End Get
		Set
			If ((Me._numero = value)  _
						= false) Then
				Me.OnnumeroChanging(value)
				Me.SendPropertyChanging
				Me._numero = value
				Me.SendPropertyChanged("numero")
				Me.OnnumeroChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_hora_inicio", DbType:="Time NOT NULL")>  _
	Public Property hora_inicio() As System.TimeSpan
		Get
			Return Me._hora_inicio
		End Get
		Set
			If ((Me._hora_inicio = value)  _
						= false) Then
				Me.Onhora_inicioChanging(value)
				Me.SendPropertyChanging
				Me._hora_inicio = value
				Me.SendPropertyChanged("hora_inicio")
				Me.Onhora_inicioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_hora_fin", DbType:="Time NOT NULL")>  _
	Public Property hora_fin() As System.TimeSpan
		Get
			Return Me._hora_fin
		End Get
		Set
			If ((Me._hora_fin = value)  _
						= false) Then
				Me.Onhora_finChanging(value)
				Me.SendPropertyChanging
				Me._hora_fin = value
				Me.SendPropertyChanged("hora_fin")
				Me.Onhora_finChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_turno_textbox", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property turno_textbox() As String
		Get
			Return Me._turno_textbox
		End Get
		Set
			If (String.Equals(Me._turno_textbox, value) = false) Then
				Me.Onturno_textboxChanging(value)
				Me.SendPropertyChanging
				Me._turno_textbox = value
				Me.SendPropertyChanged("turno_textbox")
				Me.Onturno_textboxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Modulo_Modulo_x_Curso", Storage:="_Modulo_x_Curso", ThisKey:="id_modulo", OtherKey:="id_modulo")>  _
	Public Property Modulo_x_Curso() As EntitySet(Of Modulo_x_Curso)
		Get
			Return Me._Modulo_x_Curso
		End Get
		Set
			Me._Modulo_x_Curso.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Modulo_x_Curso(ByVal entity As Modulo_x_Curso)
		Me.SendPropertyChanging
		entity.Modulo = Me
	End Sub
	
	Private Sub detach_Modulo_x_Curso(ByVal entity As Modulo_x_Curso)
		Me.SendPropertyChanging
		entity.Modulo = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Curso")>  _
Partial Public Class Curso
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_curso As Integer
	
	Private _id_personal As Integer
	
	Private _nombre_curso As String
	
	Private _Modulo_x_Curso As EntitySet(Of Modulo_x_Curso)
	
	Private _Alumno_x_curso As EntitySet(Of Alumno_x_curso)
	
	Private _Profesor_x_Materia As EntitySet(Of Profesor_x_Materia)
	
	Private _Personal As EntityRef(Of Personal)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_cursoChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_cursoChanged()
    End Sub
    Partial Private Sub Onid_personalChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_personalChanged()
    End Sub
    Partial Private Sub Onnombre_cursoChanging(value As String)
    End Sub
    Partial Private Sub Onnombre_cursoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Modulo_x_Curso = New EntitySet(Of Modulo_x_Curso)(AddressOf Me.attach_Modulo_x_Curso, AddressOf Me.detach_Modulo_x_Curso)
		Me._Alumno_x_curso = New EntitySet(Of Alumno_x_curso)(AddressOf Me.attach_Alumno_x_curso, AddressOf Me.detach_Alumno_x_curso)
		Me._Profesor_x_Materia = New EntitySet(Of Profesor_x_Materia)(AddressOf Me.attach_Profesor_x_Materia, AddressOf Me.detach_Profesor_x_Materia)
		Me._Personal = CType(Nothing, EntityRef(Of Personal))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_curso", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_curso() As Integer
		Get
			Return Me._id_curso
		End Get
		Set
			If ((Me._id_curso = value)  _
						= false) Then
				Me.Onid_cursoChanging(value)
				Me.SendPropertyChanging
				Me._id_curso = value
				Me.SendPropertyChanged("id_curso")
				Me.Onid_cursoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_personal", DbType:="Int NOT NULL")>  _
	Public Property id_personal() As Integer
		Get
			Return Me._id_personal
		End Get
		Set
			If ((Me._id_personal = value)  _
						= false) Then
				If Me._Personal.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_personalChanging(value)
				Me.SendPropertyChanging
				Me._id_personal = value
				Me.SendPropertyChanged("id_personal")
				Me.Onid_personalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nombre_curso", DbType:="NVarChar(5) NOT NULL", CanBeNull:=false)>  _
	Public Property nombre_curso() As String
		Get
			Return Me._nombre_curso
		End Get
		Set
			If (String.Equals(Me._nombre_curso, value) = false) Then
				Me.Onnombre_cursoChanging(value)
				Me.SendPropertyChanging
				Me._nombre_curso = value
				Me.SendPropertyChanged("nombre_curso")
				Me.Onnombre_cursoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Curso_Modulo_x_Curso", Storage:="_Modulo_x_Curso", ThisKey:="id_curso", OtherKey:="id_curso")>  _
	Public Property Modulo_x_Curso() As EntitySet(Of Modulo_x_Curso)
		Get
			Return Me._Modulo_x_Curso
		End Get
		Set
			Me._Modulo_x_Curso.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Curso_Alumno_x_curso", Storage:="_Alumno_x_curso", ThisKey:="id_curso", OtherKey:="id_curso")>  _
	Public Property Alumno_x_curso() As EntitySet(Of Alumno_x_curso)
		Get
			Return Me._Alumno_x_curso
		End Get
		Set
			Me._Alumno_x_curso.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Curso_Profesor_x_Materia", Storage:="_Profesor_x_Materia", ThisKey:="id_curso", OtherKey:="id_curso")>  _
	Public Property Profesor_x_Materia() As EntitySet(Of Profesor_x_Materia)
		Get
			Return Me._Profesor_x_Materia
		End Get
		Set
			Me._Profesor_x_Materia.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Personal_Curso", Storage:="_Personal", ThisKey:="id_personal", OtherKey:="id_personal", IsForeignKey:=true)>  _
	Public Property Personal() As Personal
		Get
			Return Me._Personal.Entity
		End Get
		Set
			Dim previousValue As Personal = Me._Personal.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Personal.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Personal.Entity = Nothing
					previousValue.Curso.Remove(Me)
				End If
				Me._Personal.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Curso.Add(Me)
					Me._id_personal = value.id_personal
				Else
					Me._id_personal = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("Personal")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Modulo_x_Curso(ByVal entity As Modulo_x_Curso)
		Me.SendPropertyChanging
		entity.Curso = Me
	End Sub
	
	Private Sub detach_Modulo_x_Curso(ByVal entity As Modulo_x_Curso)
		Me.SendPropertyChanging
		entity.Curso = Nothing
	End Sub
	
	Private Sub attach_Alumno_x_curso(ByVal entity As Alumno_x_curso)
		Me.SendPropertyChanging
		entity.Curso = Me
	End Sub
	
	Private Sub detach_Alumno_x_curso(ByVal entity As Alumno_x_curso)
		Me.SendPropertyChanging
		entity.Curso = Nothing
	End Sub
	
	Private Sub attach_Profesor_x_Materia(ByVal entity As Profesor_x_Materia)
		Me.SendPropertyChanging
		entity.Curso = Me
	End Sub
	
	Private Sub detach_Profesor_x_Materia(ByVal entity As Profesor_x_Materia)
		Me.SendPropertyChanging
		entity.Curso = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Modulo_x_Curso")>  _
Partial Public Class Modulo_x_Curso
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_modulo_x_curso As Integer
	
	Private _id_modulo As Integer
	
	Private _id_curso As Integer
	
	Private _Horario_personal As EntitySet(Of Horario_personal)
	
	Private _Curso As EntityRef(Of Curso)
	
	Private _Modulo As EntityRef(Of Modulo)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_modulo_x_cursoChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_modulo_x_cursoChanged()
    End Sub
    Partial Private Sub Onid_moduloChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_moduloChanged()
    End Sub
    Partial Private Sub Onid_cursoChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_cursoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Horario_personal = New EntitySet(Of Horario_personal)(AddressOf Me.attach_Horario_personal, AddressOf Me.detach_Horario_personal)
		Me._Curso = CType(Nothing, EntityRef(Of Curso))
		Me._Modulo = CType(Nothing, EntityRef(Of Modulo))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_modulo_x_curso", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_modulo_x_curso() As Integer
		Get
			Return Me._id_modulo_x_curso
		End Get
		Set
			If ((Me._id_modulo_x_curso = value)  _
						= false) Then
				Me.Onid_modulo_x_cursoChanging(value)
				Me.SendPropertyChanging
				Me._id_modulo_x_curso = value
				Me.SendPropertyChanged("id_modulo_x_curso")
				Me.Onid_modulo_x_cursoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_modulo", DbType:="Int NOT NULL")>  _
	Public Property id_modulo() As Integer
		Get
			Return Me._id_modulo
		End Get
		Set
			If ((Me._id_modulo = value)  _
						= false) Then
				If Me._Modulo.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_moduloChanging(value)
				Me.SendPropertyChanging
				Me._id_modulo = value
				Me.SendPropertyChanged("id_modulo")
				Me.Onid_moduloChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_curso", DbType:="Int NOT NULL")>  _
	Public Property id_curso() As Integer
		Get
			Return Me._id_curso
		End Get
		Set
			If ((Me._id_curso = value)  _
						= false) Then
				If Me._Curso.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_cursoChanging(value)
				Me.SendPropertyChanging
				Me._id_curso = value
				Me.SendPropertyChanged("id_curso")
				Me.Onid_cursoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Modulo_x_Curso_Horario_personal", Storage:="_Horario_personal", ThisKey:="id_modulo_x_curso", OtherKey:="id_modulo_x_curso")>  _
	Public Property Horario_personal() As EntitySet(Of Horario_personal)
		Get
			Return Me._Horario_personal
		End Get
		Set
			Me._Horario_personal.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Curso_Modulo_x_Curso", Storage:="_Curso", ThisKey:="id_curso", OtherKey:="id_curso", IsForeignKey:=true)>  _
	Public Property Curso() As Curso
		Get
			Return Me._Curso.Entity
		End Get
		Set
			Dim previousValue As Curso = Me._Curso.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Curso.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Curso.Entity = Nothing
					previousValue.Modulo_x_Curso.Remove(Me)
				End If
				Me._Curso.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Modulo_x_Curso.Add(Me)
					Me._id_curso = value.id_curso
				Else
					Me._id_curso = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("Curso")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Modulo_Modulo_x_Curso", Storage:="_Modulo", ThisKey:="id_modulo", OtherKey:="id_modulo", IsForeignKey:=true)>  _
	Public Property Modulo() As Modulo
		Get
			Return Me._Modulo.Entity
		End Get
		Set
			Dim previousValue As Modulo = Me._Modulo.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Modulo.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Modulo.Entity = Nothing
					previousValue.Modulo_x_Curso.Remove(Me)
				End If
				Me._Modulo.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Modulo_x_Curso.Add(Me)
					Me._id_modulo = value.id_modulo
				Else
					Me._id_modulo = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("Modulo")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Horario_personal(ByVal entity As Horario_personal)
		Me.SendPropertyChanging
		entity.Modulo_x_Curso = Me
	End Sub
	
	Private Sub detach_Horario_personal(ByVal entity As Horario_personal)
		Me.SendPropertyChanging
		entity.Modulo_x_Curso = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Horario_personal")>  _
Partial Public Class Horario_personal
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_horario As Integer
	
	Private _id_personal As Integer
	
	Private _dia_semana As String
	
	Private _id_materia As System.Nullable(Of Integer)
	
	Private _id_modulo_x_curso As System.Nullable(Of Integer)
	
	Private _Asistencia_docente As EntitySet(Of Asistencia_docente)
	
	Private _Modulo_x_Curso As EntityRef(Of Modulo_x_Curso)
	
	Private _Personal As EntityRef(Of Personal)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_horarioChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_horarioChanged()
    End Sub
    Partial Private Sub Onid_personalChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_personalChanged()
    End Sub
    Partial Private Sub Ondia_semanaChanging(value As String)
    End Sub
    Partial Private Sub Ondia_semanaChanged()
    End Sub
    Partial Private Sub Onid_materiaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_materiaChanged()
    End Sub
    Partial Private Sub Onid_modulo_x_cursoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_modulo_x_cursoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Asistencia_docente = New EntitySet(Of Asistencia_docente)(AddressOf Me.attach_Asistencia_docente, AddressOf Me.detach_Asistencia_docente)
		Me._Modulo_x_Curso = CType(Nothing, EntityRef(Of Modulo_x_Curso))
		Me._Personal = CType(Nothing, EntityRef(Of Personal))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_horario", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_horario() As Integer
		Get
			Return Me._id_horario
		End Get
		Set
			If ((Me._id_horario = value)  _
						= false) Then
				Me.Onid_horarioChanging(value)
				Me.SendPropertyChanging
				Me._id_horario = value
				Me.SendPropertyChanged("id_horario")
				Me.Onid_horarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_personal", DbType:="Int NOT NULL")>  _
	Public Property id_personal() As Integer
		Get
			Return Me._id_personal
		End Get
		Set
			If ((Me._id_personal = value)  _
						= false) Then
				If Me._Personal.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_personalChanging(value)
				Me.SendPropertyChanging
				Me._id_personal = value
				Me.SendPropertyChanged("id_personal")
				Me.Onid_personalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dia_semana", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property dia_semana() As String
		Get
			Return Me._dia_semana
		End Get
		Set
			If (String.Equals(Me._dia_semana, value) = false) Then
				Me.Ondia_semanaChanging(value)
				Me.SendPropertyChanging
				Me._dia_semana = value
				Me.SendPropertyChanged("dia_semana")
				Me.Ondia_semanaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_materia", DbType:="Int")>  _
	Public Property id_materia() As System.Nullable(Of Integer)
		Get
			Return Me._id_materia
		End Get
		Set
			If (Me._id_materia.Equals(value) = false) Then
				Me.Onid_materiaChanging(value)
				Me.SendPropertyChanging
				Me._id_materia = value
				Me.SendPropertyChanged("id_materia")
				Me.Onid_materiaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_modulo_x_curso", DbType:="Int")>  _
	Public Property id_modulo_x_curso() As System.Nullable(Of Integer)
		Get
			Return Me._id_modulo_x_curso
		End Get
		Set
			If (Me._id_modulo_x_curso.Equals(value) = false) Then
				If Me._Modulo_x_Curso.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_modulo_x_cursoChanging(value)
				Me.SendPropertyChanging
				Me._id_modulo_x_curso = value
				Me.SendPropertyChanged("id_modulo_x_curso")
				Me.Onid_modulo_x_cursoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Horario_personal_Asistencia_docente", Storage:="_Asistencia_docente", ThisKey:="id_horario", OtherKey:="id_horario")>  _
	Public Property Asistencia_docente() As EntitySet(Of Asistencia_docente)
		Get
			Return Me._Asistencia_docente
		End Get
		Set
			Me._Asistencia_docente.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Modulo_x_Curso_Horario_personal", Storage:="_Modulo_x_Curso", ThisKey:="id_modulo_x_curso", OtherKey:="id_modulo_x_curso", IsForeignKey:=true)>  _
	Public Property Modulo_x_Curso() As Modulo_x_Curso
		Get
			Return Me._Modulo_x_Curso.Entity
		End Get
		Set
			Dim previousValue As Modulo_x_Curso = Me._Modulo_x_Curso.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Modulo_x_Curso.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Modulo_x_Curso.Entity = Nothing
					previousValue.Horario_personal.Remove(Me)
				End If
				Me._Modulo_x_Curso.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Horario_personal.Add(Me)
					Me._id_modulo_x_curso = value.id_modulo_x_curso
				Else
					Me._id_modulo_x_curso = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("Modulo_x_Curso")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Personal_Horario_personal", Storage:="_Personal", ThisKey:="id_personal", OtherKey:="id_personal", IsForeignKey:=true)>  _
	Public Property Personal() As Personal
		Get
			Return Me._Personal.Entity
		End Get
		Set
			Dim previousValue As Personal = Me._Personal.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Personal.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Personal.Entity = Nothing
					previousValue.Horario_personal.Remove(Me)
				End If
				Me._Personal.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Horario_personal.Add(Me)
					Me._id_personal = value.id_personal
				Else
					Me._id_personal = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("Personal")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Asistencia_docente(ByVal entity As Asistencia_docente)
		Me.SendPropertyChanging
		entity.Horario_personal = Me
	End Sub
	
	Private Sub detach_Asistencia_docente(ByVal entity As Asistencia_docente)
		Me.SendPropertyChanging
		entity.Horario_personal = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Alumno_x_curso")>  _
Partial Public Class Alumno_x_curso
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_alumno_x_curso As Integer
	
	Private _id_alumno As Integer
	
	Private _id_curso As Integer
	
	Private _especialidad As String
	
	Private _Curso As EntityRef(Of Curso)
	
	Private _Alumno As EntityRef(Of Alumno)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_alumno_x_cursoChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_alumno_x_cursoChanged()
    End Sub
    Partial Private Sub Onid_alumnoChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_alumnoChanged()
    End Sub
    Partial Private Sub Onid_cursoChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_cursoChanged()
    End Sub
    Partial Private Sub OnespecialidadChanging(value As String)
    End Sub
    Partial Private Sub OnespecialidadChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Curso = CType(Nothing, EntityRef(Of Curso))
		Me._Alumno = CType(Nothing, EntityRef(Of Alumno))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_alumno_x_curso", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_alumno_x_curso() As Integer
		Get
			Return Me._id_alumno_x_curso
		End Get
		Set
			If ((Me._id_alumno_x_curso = value)  _
						= false) Then
				Me.Onid_alumno_x_cursoChanging(value)
				Me.SendPropertyChanging
				Me._id_alumno_x_curso = value
				Me.SendPropertyChanged("id_alumno_x_curso")
				Me.Onid_alumno_x_cursoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_alumno", DbType:="Int NOT NULL")>  _
	Public Property id_alumno() As Integer
		Get
			Return Me._id_alumno
		End Get
		Set
			If ((Me._id_alumno = value)  _
						= false) Then
				If Me._Alumno.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_alumnoChanging(value)
				Me.SendPropertyChanging
				Me._id_alumno = value
				Me.SendPropertyChanged("id_alumno")
				Me.Onid_alumnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_curso", DbType:="Int NOT NULL")>  _
	Public Property id_curso() As Integer
		Get
			Return Me._id_curso
		End Get
		Set
			If ((Me._id_curso = value)  _
						= false) Then
				If Me._Curso.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_cursoChanging(value)
				Me.SendPropertyChanging
				Me._id_curso = value
				Me.SendPropertyChanged("id_curso")
				Me.Onid_cursoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_especialidad", DbType:="NVarChar(75) NOT NULL", CanBeNull:=false)>  _
	Public Property especialidad() As String
		Get
			Return Me._especialidad
		End Get
		Set
			If (String.Equals(Me._especialidad, value) = false) Then
				Me.OnespecialidadChanging(value)
				Me.SendPropertyChanging
				Me._especialidad = value
				Me.SendPropertyChanged("especialidad")
				Me.OnespecialidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Curso_Alumno_x_curso", Storage:="_Curso", ThisKey:="id_curso", OtherKey:="id_curso", IsForeignKey:=true)>  _
	Public Property Curso() As Curso
		Get
			Return Me._Curso.Entity
		End Get
		Set
			Dim previousValue As Curso = Me._Curso.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Curso.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Curso.Entity = Nothing
					previousValue.Alumno_x_curso.Remove(Me)
				End If
				Me._Curso.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Alumno_x_curso.Add(Me)
					Me._id_curso = value.id_curso
				Else
					Me._id_curso = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("Curso")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Alumno_Alumno_x_curso", Storage:="_Alumno", ThisKey:="id_alumno", OtherKey:="id_alumno", IsForeignKey:=true)>  _
	Public Property Alumno() As Alumno
		Get
			Return Me._Alumno.Entity
		End Get
		Set
			Dim previousValue As Alumno = Me._Alumno.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Alumno.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Alumno.Entity = Nothing
					previousValue.Alumno_x_curso.Remove(Me)
				End If
				Me._Alumno.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Alumno_x_curso.Add(Me)
					Me._id_alumno = value.id_alumno
				Else
					Me._id_alumno = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("Alumno")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Alumno_x_materia")>  _
Partial Public Class Alumno_x_materia
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_alumno_x_materia As Integer
	
	Private _id_alumno As Integer
	
	Private _id_materia As Integer
	
	Private _parcial1 As System.Nullable(Of Integer)
	
	Private _fechaParcial1 As System.Nullable(Of Date)
	
	Private _parcial2 As System.Nullable(Of Integer)
	
	Private _fechaParcial2 As System.Nullable(Of Date)
	
	Private _parcial3 As System.Nullable(Of Integer)
	
	Private _fechaParcial3 As System.Nullable(Of Date)
	
	Private _parcial4 As System.Nullable(Of Integer)
	
	Private _fechaParcial4 As System.Nullable(Of Date)
	
	Private _integrador1 As System.Nullable(Of Integer)
	
	Private _fechaInteg1 As System.Nullable(Of Date)
	
	Private _promedioetapa1 As System.Nullable(Of Decimal)
	
	Private _parcial5 As System.Nullable(Of Integer)
	
	Private _fechaParcial5 As System.Nullable(Of Date)
	
	Private _parcial6 As System.Nullable(Of Integer)
	
	Private _fechaParcial6 As System.Nullable(Of Date)
	
	Private _parcial7 As System.Nullable(Of Integer)
	
	Private _fechaParcial7 As System.Nullable(Of Date)
	
	Private _parcial8 As System.Nullable(Of Integer)
	
	Private _fechaParcial8 As System.Nullable(Of Date)
	
	Private _integrador2 As System.Nullable(Of Integer)
	
	Private _fechaInteg2 As System.Nullable(Of Date)
	
	Private _promedioetapa2 As System.Nullable(Of Decimal)
	
	Private _parcial9 As System.Nullable(Of Integer)
	
	Private _fechaParcial9 As System.Nullable(Of Date)
	
	Private _parcial10 As System.Nullable(Of Integer)
	
	Private _fechaParcial10 As System.Nullable(Of Date)
	
	Private _parcial11 As System.Nullable(Of Integer)
	
	Private _fechaParcial11 As System.Nullable(Of Date)
	
	Private _parcial12 As System.Nullable(Of Integer)
	
	Private _fechaParcial12 As System.Nullable(Of Date)
	
	Private _integrador3 As System.Nullable(Of Integer)
	
	Private _fechaInteg3 As System.Nullable(Of Date)
	
	Private _promedioetapa3 As System.Nullable(Of Decimal)
	
	Private _promedio_anual As System.Nullable(Of Decimal)
	
	Private _coloquio As System.Nullable(Of Integer)
	
	Private _fechacoloquio As System.Nullable(Of Date)
	
	Private _examen As System.Nullable(Of Integer)
	
	Private _fechaexamen As System.Nullable(Of Date)
	
	Private _calif_definitiva As System.Nullable(Of Decimal)
	
	Private _condicion_textbox As String
	
	Private _Alumno As EntityRef(Of Alumno)
	
	Private _Materia As EntityRef(Of Materia)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_alumno_x_materiaChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_alumno_x_materiaChanged()
    End Sub
    Partial Private Sub Onid_alumnoChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_alumnoChanged()
    End Sub
    Partial Private Sub Onid_materiaChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_materiaChanged()
    End Sub
    Partial Private Sub Onparcial1Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onparcial1Changed()
    End Sub
    Partial Private Sub OnfechaParcial1Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnfechaParcial1Changed()
    End Sub
    Partial Private Sub Onparcial2Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onparcial2Changed()
    End Sub
    Partial Private Sub OnfechaParcial2Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnfechaParcial2Changed()
    End Sub
    Partial Private Sub Onparcial3Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onparcial3Changed()
    End Sub
    Partial Private Sub OnfechaParcial3Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnfechaParcial3Changed()
    End Sub
    Partial Private Sub Onparcial4Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onparcial4Changed()
    End Sub
    Partial Private Sub OnfechaParcial4Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnfechaParcial4Changed()
    End Sub
    Partial Private Sub Onintegrador1Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onintegrador1Changed()
    End Sub
    Partial Private Sub OnfechaInteg1Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnfechaInteg1Changed()
    End Sub
    Partial Private Sub Onpromedioetapa1Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onpromedioetapa1Changed()
    End Sub
    Partial Private Sub Onparcial5Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onparcial5Changed()
    End Sub
    Partial Private Sub OnfechaParcial5Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnfechaParcial5Changed()
    End Sub
    Partial Private Sub Onparcial6Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onparcial6Changed()
    End Sub
    Partial Private Sub OnfechaParcial6Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnfechaParcial6Changed()
    End Sub
    Partial Private Sub Onparcial7Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onparcial7Changed()
    End Sub
    Partial Private Sub OnfechaParcial7Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnfechaParcial7Changed()
    End Sub
    Partial Private Sub Onparcial8Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onparcial8Changed()
    End Sub
    Partial Private Sub OnfechaParcial8Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnfechaParcial8Changed()
    End Sub
    Partial Private Sub Onintegrador2Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onintegrador2Changed()
    End Sub
    Partial Private Sub OnfechaInteg2Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnfechaInteg2Changed()
    End Sub
    Partial Private Sub Onpromedioetapa2Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onpromedioetapa2Changed()
    End Sub
    Partial Private Sub Onparcial9Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onparcial9Changed()
    End Sub
    Partial Private Sub OnfechaParcial9Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnfechaParcial9Changed()
    End Sub
    Partial Private Sub Onparcial10Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onparcial10Changed()
    End Sub
    Partial Private Sub OnfechaParcial10Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnfechaParcial10Changed()
    End Sub
    Partial Private Sub Onparcial11Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onparcial11Changed()
    End Sub
    Partial Private Sub OnfechaParcial11Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnfechaParcial11Changed()
    End Sub
    Partial Private Sub Onparcial12Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onparcial12Changed()
    End Sub
    Partial Private Sub OnfechaParcial12Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnfechaParcial12Changed()
    End Sub
    Partial Private Sub Onintegrador3Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onintegrador3Changed()
    End Sub
    Partial Private Sub OnfechaInteg3Changing(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnfechaInteg3Changed()
    End Sub
    Partial Private Sub Onpromedioetapa3Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onpromedioetapa3Changed()
    End Sub
    Partial Private Sub Onpromedio_anualChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onpromedio_anualChanged()
    End Sub
    Partial Private Sub OncoloquioChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OncoloquioChanged()
    End Sub
    Partial Private Sub OnfechacoloquioChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnfechacoloquioChanged()
    End Sub
    Partial Private Sub OnexamenChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnexamenChanged()
    End Sub
    Partial Private Sub OnfechaexamenChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnfechaexamenChanged()
    End Sub
    Partial Private Sub Oncalif_definitivaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Oncalif_definitivaChanged()
    End Sub
    Partial Private Sub Oncondicion_textboxChanging(value As String)
    End Sub
    Partial Private Sub Oncondicion_textboxChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Alumno = CType(Nothing, EntityRef(Of Alumno))
		Me._Materia = CType(Nothing, EntityRef(Of Materia))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_alumno_x_materia", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_alumno_x_materia() As Integer
		Get
			Return Me._id_alumno_x_materia
		End Get
		Set
			If ((Me._id_alumno_x_materia = value)  _
						= false) Then
				Me.Onid_alumno_x_materiaChanging(value)
				Me.SendPropertyChanging
				Me._id_alumno_x_materia = value
				Me.SendPropertyChanged("id_alumno_x_materia")
				Me.Onid_alumno_x_materiaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_alumno", DbType:="Int NOT NULL")>  _
	Public Property id_alumno() As Integer
		Get
			Return Me._id_alumno
		End Get
		Set
			If ((Me._id_alumno = value)  _
						= false) Then
				If Me._Alumno.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_alumnoChanging(value)
				Me.SendPropertyChanging
				Me._id_alumno = value
				Me.SendPropertyChanged("id_alumno")
				Me.Onid_alumnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_materia", DbType:="Int NOT NULL")>  _
	Public Property id_materia() As Integer
		Get
			Return Me._id_materia
		End Get
		Set
			If ((Me._id_materia = value)  _
						= false) Then
				If Me._Materia.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_materiaChanging(value)
				Me.SendPropertyChanging
				Me._id_materia = value
				Me.SendPropertyChanged("id_materia")
				Me.Onid_materiaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_parcial1", DbType:="Int")>  _
	Public Property parcial1() As System.Nullable(Of Integer)
		Get
			Return Me._parcial1
		End Get
		Set
			If (Me._parcial1.Equals(value) = false) Then
				Me.Onparcial1Changing(value)
				Me.SendPropertyChanging
				Me._parcial1 = value
				Me.SendPropertyChanged("parcial1")
				Me.Onparcial1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fechaParcial1", DbType:="Date")>  _
	Public Property fechaParcial1() As System.Nullable(Of Date)
		Get
			Return Me._fechaParcial1
		End Get
		Set
			If (Me._fechaParcial1.Equals(value) = false) Then
				Me.OnfechaParcial1Changing(value)
				Me.SendPropertyChanging
				Me._fechaParcial1 = value
				Me.SendPropertyChanged("fechaParcial1")
				Me.OnfechaParcial1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_parcial2", DbType:="Int")>  _
	Public Property parcial2() As System.Nullable(Of Integer)
		Get
			Return Me._parcial2
		End Get
		Set
			If (Me._parcial2.Equals(value) = false) Then
				Me.Onparcial2Changing(value)
				Me.SendPropertyChanging
				Me._parcial2 = value
				Me.SendPropertyChanged("parcial2")
				Me.Onparcial2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fechaParcial2", DbType:="Date")>  _
	Public Property fechaParcial2() As System.Nullable(Of Date)
		Get
			Return Me._fechaParcial2
		End Get
		Set
			If (Me._fechaParcial2.Equals(value) = false) Then
				Me.OnfechaParcial2Changing(value)
				Me.SendPropertyChanging
				Me._fechaParcial2 = value
				Me.SendPropertyChanged("fechaParcial2")
				Me.OnfechaParcial2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_parcial3", DbType:="Int")>  _
	Public Property parcial3() As System.Nullable(Of Integer)
		Get
			Return Me._parcial3
		End Get
		Set
			If (Me._parcial3.Equals(value) = false) Then
				Me.Onparcial3Changing(value)
				Me.SendPropertyChanging
				Me._parcial3 = value
				Me.SendPropertyChanged("parcial3")
				Me.Onparcial3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fechaParcial3", DbType:="Date")>  _
	Public Property fechaParcial3() As System.Nullable(Of Date)
		Get
			Return Me._fechaParcial3
		End Get
		Set
			If (Me._fechaParcial3.Equals(value) = false) Then
				Me.OnfechaParcial3Changing(value)
				Me.SendPropertyChanging
				Me._fechaParcial3 = value
				Me.SendPropertyChanged("fechaParcial3")
				Me.OnfechaParcial3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_parcial4", DbType:="Int")>  _
	Public Property parcial4() As System.Nullable(Of Integer)
		Get
			Return Me._parcial4
		End Get
		Set
			If (Me._parcial4.Equals(value) = false) Then
				Me.Onparcial4Changing(value)
				Me.SendPropertyChanging
				Me._parcial4 = value
				Me.SendPropertyChanged("parcial4")
				Me.Onparcial4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fechaParcial4", DbType:="Date")>  _
	Public Property fechaParcial4() As System.Nullable(Of Date)
		Get
			Return Me._fechaParcial4
		End Get
		Set
			If (Me._fechaParcial4.Equals(value) = false) Then
				Me.OnfechaParcial4Changing(value)
				Me.SendPropertyChanging
				Me._fechaParcial4 = value
				Me.SendPropertyChanged("fechaParcial4")
				Me.OnfechaParcial4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_integrador1", DbType:="Int")>  _
	Public Property integrador1() As System.Nullable(Of Integer)
		Get
			Return Me._integrador1
		End Get
		Set
			If (Me._integrador1.Equals(value) = false) Then
				Me.Onintegrador1Changing(value)
				Me.SendPropertyChanging
				Me._integrador1 = value
				Me.SendPropertyChanged("integrador1")
				Me.Onintegrador1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fechaInteg1", DbType:="Date")>  _
	Public Property fechaInteg1() As System.Nullable(Of Date)
		Get
			Return Me._fechaInteg1
		End Get
		Set
			If (Me._fechaInteg1.Equals(value) = false) Then
				Me.OnfechaInteg1Changing(value)
				Me.SendPropertyChanging
				Me._fechaInteg1 = value
				Me.SendPropertyChanged("fechaInteg1")
				Me.OnfechaInteg1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_promedioetapa1", DbType:="Decimal(4,2)")>  _
	Public Property promedioetapa1() As System.Nullable(Of Decimal)
		Get
			Return Me._promedioetapa1
		End Get
		Set
			If (Me._promedioetapa1.Equals(value) = false) Then
				Me.Onpromedioetapa1Changing(value)
				Me.SendPropertyChanging
				Me._promedioetapa1 = value
				Me.SendPropertyChanged("promedioetapa1")
				Me.Onpromedioetapa1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_parcial5", DbType:="Int")>  _
	Public Property parcial5() As System.Nullable(Of Integer)
		Get
			Return Me._parcial5
		End Get
		Set
			If (Me._parcial5.Equals(value) = false) Then
				Me.Onparcial5Changing(value)
				Me.SendPropertyChanging
				Me._parcial5 = value
				Me.SendPropertyChanged("parcial5")
				Me.Onparcial5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fechaParcial5", DbType:="Date")>  _
	Public Property fechaParcial5() As System.Nullable(Of Date)
		Get
			Return Me._fechaParcial5
		End Get
		Set
			If (Me._fechaParcial5.Equals(value) = false) Then
				Me.OnfechaParcial5Changing(value)
				Me.SendPropertyChanging
				Me._fechaParcial5 = value
				Me.SendPropertyChanged("fechaParcial5")
				Me.OnfechaParcial5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_parcial6", DbType:="Int")>  _
	Public Property parcial6() As System.Nullable(Of Integer)
		Get
			Return Me._parcial6
		End Get
		Set
			If (Me._parcial6.Equals(value) = false) Then
				Me.Onparcial6Changing(value)
				Me.SendPropertyChanging
				Me._parcial6 = value
				Me.SendPropertyChanged("parcial6")
				Me.Onparcial6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fechaParcial6", DbType:="Date")>  _
	Public Property fechaParcial6() As System.Nullable(Of Date)
		Get
			Return Me._fechaParcial6
		End Get
		Set
			If (Me._fechaParcial6.Equals(value) = false) Then
				Me.OnfechaParcial6Changing(value)
				Me.SendPropertyChanging
				Me._fechaParcial6 = value
				Me.SendPropertyChanged("fechaParcial6")
				Me.OnfechaParcial6Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_parcial7", DbType:="Int")>  _
	Public Property parcial7() As System.Nullable(Of Integer)
		Get
			Return Me._parcial7
		End Get
		Set
			If (Me._parcial7.Equals(value) = false) Then
				Me.Onparcial7Changing(value)
				Me.SendPropertyChanging
				Me._parcial7 = value
				Me.SendPropertyChanged("parcial7")
				Me.Onparcial7Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fechaParcial7", DbType:="Date")>  _
	Public Property fechaParcial7() As System.Nullable(Of Date)
		Get
			Return Me._fechaParcial7
		End Get
		Set
			If (Me._fechaParcial7.Equals(value) = false) Then
				Me.OnfechaParcial7Changing(value)
				Me.SendPropertyChanging
				Me._fechaParcial7 = value
				Me.SendPropertyChanged("fechaParcial7")
				Me.OnfechaParcial7Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_parcial8", DbType:="Int")>  _
	Public Property parcial8() As System.Nullable(Of Integer)
		Get
			Return Me._parcial8
		End Get
		Set
			If (Me._parcial8.Equals(value) = false) Then
				Me.Onparcial8Changing(value)
				Me.SendPropertyChanging
				Me._parcial8 = value
				Me.SendPropertyChanged("parcial8")
				Me.Onparcial8Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fechaParcial8", DbType:="Date")>  _
	Public Property fechaParcial8() As System.Nullable(Of Date)
		Get
			Return Me._fechaParcial8
		End Get
		Set
			If (Me._fechaParcial8.Equals(value) = false) Then
				Me.OnfechaParcial8Changing(value)
				Me.SendPropertyChanging
				Me._fechaParcial8 = value
				Me.SendPropertyChanged("fechaParcial8")
				Me.OnfechaParcial8Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_integrador2", DbType:="Int")>  _
	Public Property integrador2() As System.Nullable(Of Integer)
		Get
			Return Me._integrador2
		End Get
		Set
			If (Me._integrador2.Equals(value) = false) Then
				Me.Onintegrador2Changing(value)
				Me.SendPropertyChanging
				Me._integrador2 = value
				Me.SendPropertyChanged("integrador2")
				Me.Onintegrador2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fechaInteg2", DbType:="Date")>  _
	Public Property fechaInteg2() As System.Nullable(Of Date)
		Get
			Return Me._fechaInteg2
		End Get
		Set
			If (Me._fechaInteg2.Equals(value) = false) Then
				Me.OnfechaInteg2Changing(value)
				Me.SendPropertyChanging
				Me._fechaInteg2 = value
				Me.SendPropertyChanged("fechaInteg2")
				Me.OnfechaInteg2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_promedioetapa2", DbType:="Decimal(4,2)")>  _
	Public Property promedioetapa2() As System.Nullable(Of Decimal)
		Get
			Return Me._promedioetapa2
		End Get
		Set
			If (Me._promedioetapa2.Equals(value) = false) Then
				Me.Onpromedioetapa2Changing(value)
				Me.SendPropertyChanging
				Me._promedioetapa2 = value
				Me.SendPropertyChanged("promedioetapa2")
				Me.Onpromedioetapa2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_parcial9", DbType:="Int")>  _
	Public Property parcial9() As System.Nullable(Of Integer)
		Get
			Return Me._parcial9
		End Get
		Set
			If (Me._parcial9.Equals(value) = false) Then
				Me.Onparcial9Changing(value)
				Me.SendPropertyChanging
				Me._parcial9 = value
				Me.SendPropertyChanged("parcial9")
				Me.Onparcial9Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fechaParcial9", DbType:="Date")>  _
	Public Property fechaParcial9() As System.Nullable(Of Date)
		Get
			Return Me._fechaParcial9
		End Get
		Set
			If (Me._fechaParcial9.Equals(value) = false) Then
				Me.OnfechaParcial9Changing(value)
				Me.SendPropertyChanging
				Me._fechaParcial9 = value
				Me.SendPropertyChanged("fechaParcial9")
				Me.OnfechaParcial9Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_parcial10", DbType:="Int")>  _
	Public Property parcial10() As System.Nullable(Of Integer)
		Get
			Return Me._parcial10
		End Get
		Set
			If (Me._parcial10.Equals(value) = false) Then
				Me.Onparcial10Changing(value)
				Me.SendPropertyChanging
				Me._parcial10 = value
				Me.SendPropertyChanged("parcial10")
				Me.Onparcial10Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fechaParcial10", DbType:="Date")>  _
	Public Property fechaParcial10() As System.Nullable(Of Date)
		Get
			Return Me._fechaParcial10
		End Get
		Set
			If (Me._fechaParcial10.Equals(value) = false) Then
				Me.OnfechaParcial10Changing(value)
				Me.SendPropertyChanging
				Me._fechaParcial10 = value
				Me.SendPropertyChanged("fechaParcial10")
				Me.OnfechaParcial10Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_parcial11", DbType:="Int")>  _
	Public Property parcial11() As System.Nullable(Of Integer)
		Get
			Return Me._parcial11
		End Get
		Set
			If (Me._parcial11.Equals(value) = false) Then
				Me.Onparcial11Changing(value)
				Me.SendPropertyChanging
				Me._parcial11 = value
				Me.SendPropertyChanged("parcial11")
				Me.Onparcial11Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fechaParcial11", DbType:="Date")>  _
	Public Property fechaParcial11() As System.Nullable(Of Date)
		Get
			Return Me._fechaParcial11
		End Get
		Set
			If (Me._fechaParcial11.Equals(value) = false) Then
				Me.OnfechaParcial11Changing(value)
				Me.SendPropertyChanging
				Me._fechaParcial11 = value
				Me.SendPropertyChanged("fechaParcial11")
				Me.OnfechaParcial11Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_parcial12", DbType:="Int")>  _
	Public Property parcial12() As System.Nullable(Of Integer)
		Get
			Return Me._parcial12
		End Get
		Set
			If (Me._parcial12.Equals(value) = false) Then
				Me.Onparcial12Changing(value)
				Me.SendPropertyChanging
				Me._parcial12 = value
				Me.SendPropertyChanged("parcial12")
				Me.Onparcial12Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fechaParcial12", DbType:="Date")>  _
	Public Property fechaParcial12() As System.Nullable(Of Date)
		Get
			Return Me._fechaParcial12
		End Get
		Set
			If (Me._fechaParcial12.Equals(value) = false) Then
				Me.OnfechaParcial12Changing(value)
				Me.SendPropertyChanging
				Me._fechaParcial12 = value
				Me.SendPropertyChanged("fechaParcial12")
				Me.OnfechaParcial12Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_integrador3", DbType:="Int")>  _
	Public Property integrador3() As System.Nullable(Of Integer)
		Get
			Return Me._integrador3
		End Get
		Set
			If (Me._integrador3.Equals(value) = false) Then
				Me.Onintegrador3Changing(value)
				Me.SendPropertyChanging
				Me._integrador3 = value
				Me.SendPropertyChanged("integrador3")
				Me.Onintegrador3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fechaInteg3", DbType:="Date")>  _
	Public Property fechaInteg3() As System.Nullable(Of Date)
		Get
			Return Me._fechaInteg3
		End Get
		Set
			If (Me._fechaInteg3.Equals(value) = false) Then
				Me.OnfechaInteg3Changing(value)
				Me.SendPropertyChanging
				Me._fechaInteg3 = value
				Me.SendPropertyChanged("fechaInteg3")
				Me.OnfechaInteg3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_promedioetapa3", DbType:="Decimal(4,2)")>  _
	Public Property promedioetapa3() As System.Nullable(Of Decimal)
		Get
			Return Me._promedioetapa3
		End Get
		Set
			If (Me._promedioetapa3.Equals(value) = false) Then
				Me.Onpromedioetapa3Changing(value)
				Me.SendPropertyChanging
				Me._promedioetapa3 = value
				Me.SendPropertyChanged("promedioetapa3")
				Me.Onpromedioetapa3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_promedio_anual", DbType:="Decimal(4,2)")>  _
	Public Property promedio_anual() As System.Nullable(Of Decimal)
		Get
			Return Me._promedio_anual
		End Get
		Set
			If (Me._promedio_anual.Equals(value) = false) Then
				Me.Onpromedio_anualChanging(value)
				Me.SendPropertyChanging
				Me._promedio_anual = value
				Me.SendPropertyChanged("promedio_anual")
				Me.Onpromedio_anualChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_coloquio", DbType:="Int")>  _
	Public Property coloquio() As System.Nullable(Of Integer)
		Get
			Return Me._coloquio
		End Get
		Set
			If (Me._coloquio.Equals(value) = false) Then
				Me.OncoloquioChanging(value)
				Me.SendPropertyChanging
				Me._coloquio = value
				Me.SendPropertyChanged("coloquio")
				Me.OncoloquioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fechacoloquio", DbType:="Date")>  _
	Public Property fechacoloquio() As System.Nullable(Of Date)
		Get
			Return Me._fechacoloquio
		End Get
		Set
			If (Me._fechacoloquio.Equals(value) = false) Then
				Me.OnfechacoloquioChanging(value)
				Me.SendPropertyChanging
				Me._fechacoloquio = value
				Me.SendPropertyChanged("fechacoloquio")
				Me.OnfechacoloquioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_examen", DbType:="Int")>  _
	Public Property examen() As System.Nullable(Of Integer)
		Get
			Return Me._examen
		End Get
		Set
			If (Me._examen.Equals(value) = false) Then
				Me.OnexamenChanging(value)
				Me.SendPropertyChanging
				Me._examen = value
				Me.SendPropertyChanged("examen")
				Me.OnexamenChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fechaexamen", DbType:="Date")>  _
	Public Property fechaexamen() As System.Nullable(Of Date)
		Get
			Return Me._fechaexamen
		End Get
		Set
			If (Me._fechaexamen.Equals(value) = false) Then
				Me.OnfechaexamenChanging(value)
				Me.SendPropertyChanging
				Me._fechaexamen = value
				Me.SendPropertyChanged("fechaexamen")
				Me.OnfechaexamenChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_calif_definitiva", DbType:="Decimal(4,2)")>  _
	Public Property calif_definitiva() As System.Nullable(Of Decimal)
		Get
			Return Me._calif_definitiva
		End Get
		Set
			If (Me._calif_definitiva.Equals(value) = false) Then
				Me.Oncalif_definitivaChanging(value)
				Me.SendPropertyChanging
				Me._calif_definitiva = value
				Me.SendPropertyChanged("calif_definitiva")
				Me.Oncalif_definitivaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_condicion_textbox", DbType:="NVarChar(15) NOT NULL", CanBeNull:=false)>  _
	Public Property condicion_textbox() As String
		Get
			Return Me._condicion_textbox
		End Get
		Set
			If (String.Equals(Me._condicion_textbox, value) = false) Then
				Me.Oncondicion_textboxChanging(value)
				Me.SendPropertyChanging
				Me._condicion_textbox = value
				Me.SendPropertyChanged("condicion_textbox")
				Me.Oncondicion_textboxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Alumno_Alumno_x_materia", Storage:="_Alumno", ThisKey:="id_alumno", OtherKey:="id_alumno", IsForeignKey:=true)>  _
	Public Property Alumno() As Alumno
		Get
			Return Me._Alumno.Entity
		End Get
		Set
			Dim previousValue As Alumno = Me._Alumno.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Alumno.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Alumno.Entity = Nothing
					previousValue.Alumno_x_materia.Remove(Me)
				End If
				Me._Alumno.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Alumno_x_materia.Add(Me)
					Me._id_alumno = value.id_alumno
				Else
					Me._id_alumno = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("Alumno")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Materia_Alumno_x_materia", Storage:="_Materia", ThisKey:="id_materia", OtherKey:="id_materia", IsForeignKey:=true)>  _
	Public Property Materia() As Materia
		Get
			Return Me._Materia.Entity
		End Get
		Set
			Dim previousValue As Materia = Me._Materia.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Materia.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Materia.Entity = Nothing
					previousValue.Alumno_x_materia.Remove(Me)
				End If
				Me._Materia.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Alumno_x_materia.Add(Me)
					Me._id_materia = value.id_materia
				Else
					Me._id_materia = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("Materia")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Personal")>  _
Partial Public Class Personal
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_personal As Integer
	
	Private _nombre_pers As String
	
	Private _apelliido_pers As String
	
	Private _domicilio_pers As String
	
	Private _mail_pers As String
	
	Private _telefono_pers As String
	
	Private _DNI_pers As Integer
	
	Private _titulo_pers As String
	
	Private _fecha_psicofisico_pers As System.Nullable(Of Date)
	
	Private _fecha_ingreso_pers As System.Nullable(Of Date)
	
	Private _fecha_escalafon_pers As System.Nullable(Of Date)
	
	Private _leg_provincial_pers As System.Nullable(Of Integer)
	
	Private _puesto_pers As String
	
	Private _hs_cat_colegio As System.Nullable(Of Integer)
	
	Private _hs_cat_totales As System.Nullable(Of Integer)
	
	Private _hs_reloj_colegio As System.Nullable(Of Integer)
	
	Private _hs_reloj_totales As System.Nullable(Of Integer)
	
	Private _foto_personal As System.Data.Linq.Binary
	
	Private _Curso As EntitySet(Of Curso)
	
	Private _Horario_personal As EntitySet(Of Horario_personal)
	
	Private _Usuario1 As EntitySet(Of Usuario1)
	
	Private _Profesor_x_Materia As EntitySet(Of Profesor_x_Materia)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_personalChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_personalChanged()
    End Sub
    Partial Private Sub Onnombre_persChanging(value As String)
    End Sub
    Partial Private Sub Onnombre_persChanged()
    End Sub
    Partial Private Sub Onapelliido_persChanging(value As String)
    End Sub
    Partial Private Sub Onapelliido_persChanged()
    End Sub
    Partial Private Sub Ondomicilio_persChanging(value As String)
    End Sub
    Partial Private Sub Ondomicilio_persChanged()
    End Sub
    Partial Private Sub Onmail_persChanging(value As String)
    End Sub
    Partial Private Sub Onmail_persChanged()
    End Sub
    Partial Private Sub Ontelefono_persChanging(value As String)
    End Sub
    Partial Private Sub Ontelefono_persChanged()
    End Sub
    Partial Private Sub OnDNI_persChanging(value As Integer)
    End Sub
    Partial Private Sub OnDNI_persChanged()
    End Sub
    Partial Private Sub Ontitulo_persChanging(value As String)
    End Sub
    Partial Private Sub Ontitulo_persChanged()
    End Sub
    Partial Private Sub Onfecha_psicofisico_persChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onfecha_psicofisico_persChanged()
    End Sub
    Partial Private Sub Onfecha_ingreso_persChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onfecha_ingreso_persChanged()
    End Sub
    Partial Private Sub Onfecha_escalafon_persChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onfecha_escalafon_persChanged()
    End Sub
    Partial Private Sub Onleg_provincial_persChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onleg_provincial_persChanged()
    End Sub
    Partial Private Sub Onpuesto_persChanging(value As String)
    End Sub
    Partial Private Sub Onpuesto_persChanged()
    End Sub
    Partial Private Sub Onhs_cat_colegioChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onhs_cat_colegioChanged()
    End Sub
    Partial Private Sub Onhs_cat_totalesChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onhs_cat_totalesChanged()
    End Sub
    Partial Private Sub Onhs_reloj_colegioChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onhs_reloj_colegioChanged()
    End Sub
    Partial Private Sub Onhs_reloj_totalesChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onhs_reloj_totalesChanged()
    End Sub
    Partial Private Sub Onfoto_personalChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub Onfoto_personalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Curso = New EntitySet(Of Curso)(AddressOf Me.attach_Curso, AddressOf Me.detach_Curso)
		Me._Horario_personal = New EntitySet(Of Horario_personal)(AddressOf Me.attach_Horario_personal, AddressOf Me.detach_Horario_personal)
		Me._Usuario1 = New EntitySet(Of Usuario1)(AddressOf Me.attach_Usuario1, AddressOf Me.detach_Usuario1)
		Me._Profesor_x_Materia = New EntitySet(Of Profesor_x_Materia)(AddressOf Me.attach_Profesor_x_Materia, AddressOf Me.detach_Profesor_x_Materia)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_personal", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_personal() As Integer
		Get
			Return Me._id_personal
		End Get
		Set
			If ((Me._id_personal = value)  _
						= false) Then
				Me.Onid_personalChanging(value)
				Me.SendPropertyChanging
				Me._id_personal = value
				Me.SendPropertyChanged("id_personal")
				Me.Onid_personalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nombre_pers", DbType:="NVarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property nombre_pers() As String
		Get
			Return Me._nombre_pers
		End Get
		Set
			If (String.Equals(Me._nombre_pers, value) = false) Then
				Me.Onnombre_persChanging(value)
				Me.SendPropertyChanging
				Me._nombre_pers = value
				Me.SendPropertyChanged("nombre_pers")
				Me.Onnombre_persChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_apelliido_pers", DbType:="NVarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property apelliido_pers() As String
		Get
			Return Me._apelliido_pers
		End Get
		Set
			If (String.Equals(Me._apelliido_pers, value) = false) Then
				Me.Onapelliido_persChanging(value)
				Me.SendPropertyChanging
				Me._apelliido_pers = value
				Me.SendPropertyChanged("apelliido_pers")
				Me.Onapelliido_persChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_domicilio_pers", DbType:="NVarChar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property domicilio_pers() As String
		Get
			Return Me._domicilio_pers
		End Get
		Set
			If (String.Equals(Me._domicilio_pers, value) = false) Then
				Me.Ondomicilio_persChanging(value)
				Me.SendPropertyChanging
				Me._domicilio_pers = value
				Me.SendPropertyChanged("domicilio_pers")
				Me.Ondomicilio_persChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mail_pers", DbType:="NVarChar(50)")>  _
	Public Property mail_pers() As String
		Get
			Return Me._mail_pers
		End Get
		Set
			If (String.Equals(Me._mail_pers, value) = false) Then
				Me.Onmail_persChanging(value)
				Me.SendPropertyChanging
				Me._mail_pers = value
				Me.SendPropertyChanged("mail_pers")
				Me.Onmail_persChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_telefono_pers", DbType:="NVarChar(20)")>  _
	Public Property telefono_pers() As String
		Get
			Return Me._telefono_pers
		End Get
		Set
			If (String.Equals(Me._telefono_pers, value) = false) Then
				Me.Ontelefono_persChanging(value)
				Me.SendPropertyChanging
				Me._telefono_pers = value
				Me.SendPropertyChanged("telefono_pers")
				Me.Ontelefono_persChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DNI_pers", DbType:="Int NOT NULL")>  _
	Public Property DNI_pers() As Integer
		Get
			Return Me._DNI_pers
		End Get
		Set
			If ((Me._DNI_pers = value)  _
						= false) Then
				Me.OnDNI_persChanging(value)
				Me.SendPropertyChanging
				Me._DNI_pers = value
				Me.SendPropertyChanged("DNI_pers")
				Me.OnDNI_persChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_titulo_pers", DbType:="NVarChar(50)")>  _
	Public Property titulo_pers() As String
		Get
			Return Me._titulo_pers
		End Get
		Set
			If (String.Equals(Me._titulo_pers, value) = false) Then
				Me.Ontitulo_persChanging(value)
				Me.SendPropertyChanging
				Me._titulo_pers = value
				Me.SendPropertyChanged("titulo_pers")
				Me.Ontitulo_persChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fecha_psicofisico_pers", DbType:="Date")>  _
	Public Property fecha_psicofisico_pers() As System.Nullable(Of Date)
		Get
			Return Me._fecha_psicofisico_pers
		End Get
		Set
			If (Me._fecha_psicofisico_pers.Equals(value) = false) Then
				Me.Onfecha_psicofisico_persChanging(value)
				Me.SendPropertyChanging
				Me._fecha_psicofisico_pers = value
				Me.SendPropertyChanged("fecha_psicofisico_pers")
				Me.Onfecha_psicofisico_persChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fecha_ingreso_pers", DbType:="Date")>  _
	Public Property fecha_ingreso_pers() As System.Nullable(Of Date)
		Get
			Return Me._fecha_ingreso_pers
		End Get
		Set
			If (Me._fecha_ingreso_pers.Equals(value) = false) Then
				Me.Onfecha_ingreso_persChanging(value)
				Me.SendPropertyChanging
				Me._fecha_ingreso_pers = value
				Me.SendPropertyChanged("fecha_ingreso_pers")
				Me.Onfecha_ingreso_persChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fecha_escalafon_pers", DbType:="Date")>  _
	Public Property fecha_escalafon_pers() As System.Nullable(Of Date)
		Get
			Return Me._fecha_escalafon_pers
		End Get
		Set
			If (Me._fecha_escalafon_pers.Equals(value) = false) Then
				Me.Onfecha_escalafon_persChanging(value)
				Me.SendPropertyChanging
				Me._fecha_escalafon_pers = value
				Me.SendPropertyChanged("fecha_escalafon_pers")
				Me.Onfecha_escalafon_persChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_leg_provincial_pers", DbType:="Int")>  _
	Public Property leg_provincial_pers() As System.Nullable(Of Integer)
		Get
			Return Me._leg_provincial_pers
		End Get
		Set
			If (Me._leg_provincial_pers.Equals(value) = false) Then
				Me.Onleg_provincial_persChanging(value)
				Me.SendPropertyChanging
				Me._leg_provincial_pers = value
				Me.SendPropertyChanged("leg_provincial_pers")
				Me.Onleg_provincial_persChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_puesto_pers", DbType:="NVarChar(50)")>  _
	Public Property puesto_pers() As String
		Get
			Return Me._puesto_pers
		End Get
		Set
			If (String.Equals(Me._puesto_pers, value) = false) Then
				Me.Onpuesto_persChanging(value)
				Me.SendPropertyChanging
				Me._puesto_pers = value
				Me.SendPropertyChanged("puesto_pers")
				Me.Onpuesto_persChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_hs_cat_colegio", DbType:="Int")>  _
	Public Property hs_cat_colegio() As System.Nullable(Of Integer)
		Get
			Return Me._hs_cat_colegio
		End Get
		Set
			If (Me._hs_cat_colegio.Equals(value) = false) Then
				Me.Onhs_cat_colegioChanging(value)
				Me.SendPropertyChanging
				Me._hs_cat_colegio = value
				Me.SendPropertyChanged("hs_cat_colegio")
				Me.Onhs_cat_colegioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_hs_cat_totales", DbType:="Int")>  _
	Public Property hs_cat_totales() As System.Nullable(Of Integer)
		Get
			Return Me._hs_cat_totales
		End Get
		Set
			If (Me._hs_cat_totales.Equals(value) = false) Then
				Me.Onhs_cat_totalesChanging(value)
				Me.SendPropertyChanging
				Me._hs_cat_totales = value
				Me.SendPropertyChanged("hs_cat_totales")
				Me.Onhs_cat_totalesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_hs_reloj_colegio", DbType:="Int")>  _
	Public Property hs_reloj_colegio() As System.Nullable(Of Integer)
		Get
			Return Me._hs_reloj_colegio
		End Get
		Set
			If (Me._hs_reloj_colegio.Equals(value) = false) Then
				Me.Onhs_reloj_colegioChanging(value)
				Me.SendPropertyChanging
				Me._hs_reloj_colegio = value
				Me.SendPropertyChanged("hs_reloj_colegio")
				Me.Onhs_reloj_colegioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_hs_reloj_totales", DbType:="Int")>  _
	Public Property hs_reloj_totales() As System.Nullable(Of Integer)
		Get
			Return Me._hs_reloj_totales
		End Get
		Set
			If (Me._hs_reloj_totales.Equals(value) = false) Then
				Me.Onhs_reloj_totalesChanging(value)
				Me.SendPropertyChanging
				Me._hs_reloj_totales = value
				Me.SendPropertyChanged("hs_reloj_totales")
				Me.Onhs_reloj_totalesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_foto_personal", DbType:="Image", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property foto_personal() As System.Data.Linq.Binary
		Get
			Return Me._foto_personal
		End Get
		Set
			If (Object.Equals(Me._foto_personal, value) = false) Then
				Me.Onfoto_personalChanging(value)
				Me.SendPropertyChanging
				Me._foto_personal = value
				Me.SendPropertyChanged("foto_personal")
				Me.Onfoto_personalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Personal_Curso", Storage:="_Curso", ThisKey:="id_personal", OtherKey:="id_personal")>  _
	Public Property Curso() As EntitySet(Of Curso)
		Get
			Return Me._Curso
		End Get
		Set
			Me._Curso.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Personal_Horario_personal", Storage:="_Horario_personal", ThisKey:="id_personal", OtherKey:="id_personal")>  _
	Public Property Horario_personal() As EntitySet(Of Horario_personal)
		Get
			Return Me._Horario_personal
		End Get
		Set
			Me._Horario_personal.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Personal_Usuario1", Storage:="_Usuario1", ThisKey:="id_personal", OtherKey:="id_personal")>  _
	Public Property Usuario1() As EntitySet(Of Usuario1)
		Get
			Return Me._Usuario1
		End Get
		Set
			Me._Usuario1.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Personal_Profesor_x_Materia", Storage:="_Profesor_x_Materia", ThisKey:="id_personal", OtherKey:="id_personal")>  _
	Public Property Profesor_x_Materia() As EntitySet(Of Profesor_x_Materia)
		Get
			Return Me._Profesor_x_Materia
		End Get
		Set
			Me._Profesor_x_Materia.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Curso(ByVal entity As Curso)
		Me.SendPropertyChanging
		entity.Personal = Me
	End Sub
	
	Private Sub detach_Curso(ByVal entity As Curso)
		Me.SendPropertyChanging
		entity.Personal = Nothing
	End Sub
	
	Private Sub attach_Horario_personal(ByVal entity As Horario_personal)
		Me.SendPropertyChanging
		entity.Personal = Me
	End Sub
	
	Private Sub detach_Horario_personal(ByVal entity As Horario_personal)
		Me.SendPropertyChanging
		entity.Personal = Nothing
	End Sub
	
	Private Sub attach_Usuario1(ByVal entity As Usuario1)
		Me.SendPropertyChanging
		entity.Personal = Me
	End Sub
	
	Private Sub detach_Usuario1(ByVal entity As Usuario1)
		Me.SendPropertyChanging
		entity.Personal = Nothing
	End Sub
	
	Private Sub attach_Profesor_x_Materia(ByVal entity As Profesor_x_Materia)
		Me.SendPropertyChanging
		entity.Personal = Me
	End Sub
	
	Private Sub detach_Profesor_x_Materia(ByVal entity As Profesor_x_Materia)
		Me.SendPropertyChanging
		entity.Personal = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Asistencia_alumnos")>  _
Partial Public Class Asistencia_alumnos
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_asistencia_alu As Integer
	
	Private _fecha_asistencia_alu As Date
	
	Private _observacion_asis_alu As String
	
	Private _estado_asistencia_alu As String
	
	Private _id_alumno As Integer
	
	Private _Alumno As EntityRef(Of Alumno)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_asistencia_aluChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_asistencia_aluChanged()
    End Sub
    Partial Private Sub Onfecha_asistencia_aluChanging(value As Date)
    End Sub
    Partial Private Sub Onfecha_asistencia_aluChanged()
    End Sub
    Partial Private Sub Onobservacion_asis_aluChanging(value As String)
    End Sub
    Partial Private Sub Onobservacion_asis_aluChanged()
    End Sub
    Partial Private Sub Onestado_asistencia_aluChanging(value As String)
    End Sub
    Partial Private Sub Onestado_asistencia_aluChanged()
    End Sub
    Partial Private Sub Onid_alumnoChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_alumnoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Alumno = CType(Nothing, EntityRef(Of Alumno))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_asistencia_alu", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_asistencia_alu() As Integer
		Get
			Return Me._id_asistencia_alu
		End Get
		Set
			If ((Me._id_asistencia_alu = value)  _
						= false) Then
				Me.Onid_asistencia_aluChanging(value)
				Me.SendPropertyChanging
				Me._id_asistencia_alu = value
				Me.SendPropertyChanged("id_asistencia_alu")
				Me.Onid_asistencia_aluChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fecha_asistencia_alu", DbType:="Date NOT NULL")>  _
	Public Property fecha_asistencia_alu() As Date
		Get
			Return Me._fecha_asistencia_alu
		End Get
		Set
			If ((Me._fecha_asistencia_alu = value)  _
						= false) Then
				Me.Onfecha_asistencia_aluChanging(value)
				Me.SendPropertyChanging
				Me._fecha_asistencia_alu = value
				Me.SendPropertyChanged("fecha_asistencia_alu")
				Me.Onfecha_asistencia_aluChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_observacion_asis_alu", DbType:="NVarChar(50)")>  _
	Public Property observacion_asis_alu() As String
		Get
			Return Me._observacion_asis_alu
		End Get
		Set
			If (String.Equals(Me._observacion_asis_alu, value) = false) Then
				Me.Onobservacion_asis_aluChanging(value)
				Me.SendPropertyChanging
				Me._observacion_asis_alu = value
				Me.SendPropertyChanged("observacion_asis_alu")
				Me.Onobservacion_asis_aluChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_estado_asistencia_alu", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property estado_asistencia_alu() As String
		Get
			Return Me._estado_asistencia_alu
		End Get
		Set
			If (String.Equals(Me._estado_asistencia_alu, value) = false) Then
				Me.Onestado_asistencia_aluChanging(value)
				Me.SendPropertyChanging
				Me._estado_asistencia_alu = value
				Me.SendPropertyChanged("estado_asistencia_alu")
				Me.Onestado_asistencia_aluChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_alumno", DbType:="Int NOT NULL")>  _
	Public Property id_alumno() As Integer
		Get
			Return Me._id_alumno
		End Get
		Set
			If ((Me._id_alumno = value)  _
						= false) Then
				If Me._Alumno.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_alumnoChanging(value)
				Me.SendPropertyChanging
				Me._id_alumno = value
				Me.SendPropertyChanged("id_alumno")
				Me.Onid_alumnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Alumno_Asistencia_alumnos", Storage:="_Alumno", ThisKey:="id_alumno", OtherKey:="id_alumno", IsForeignKey:=true)>  _
	Public Property Alumno() As Alumno
		Get
			Return Me._Alumno.Entity
		End Get
		Set
			Dim previousValue As Alumno = Me._Alumno.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Alumno.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Alumno.Entity = Nothing
					previousValue.Asistencia_alumnos.Remove(Me)
				End If
				Me._Alumno.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Asistencia_alumnos.Add(Me)
					Me._id_alumno = value.id_alumno
				Else
					Me._id_alumno = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("Alumno")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Alumno")>  _
Partial Public Class Alumno
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_alumno As Integer
	
	Private _nombre_alu As String
	
	Private _apellido_alu As String
	
	Private _domicilio As String
	
	Private _DNI_alu As Integer
	
	Private _fecha_inscripcion_alu As System.Nullable(Of Date)
	
	Private _fecha_nac_alu As System.Nullable(Of Date)
	
	Private _mail_alu As String
	
	Private _nomb_ape_tutor As String
	
	Private _dni_tutor As Integer
	
	Private _telefono_tutor As String
	
	Private _foto_alu As System.Data.Linq.Binary
	
	Private _Alumno_x_curso As EntitySet(Of Alumno_x_curso)
	
	Private _Alumno_x_materia As EntitySet(Of Alumno_x_materia)
	
	Private _Asistencia_alumnos As EntitySet(Of Asistencia_alumnos)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_alumnoChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_alumnoChanged()
    End Sub
    Partial Private Sub Onnombre_aluChanging(value As String)
    End Sub
    Partial Private Sub Onnombre_aluChanged()
    End Sub
    Partial Private Sub Onapellido_aluChanging(value As String)
    End Sub
    Partial Private Sub Onapellido_aluChanged()
    End Sub
    Partial Private Sub OndomicilioChanging(value As String)
    End Sub
    Partial Private Sub OndomicilioChanged()
    End Sub
    Partial Private Sub OnDNI_aluChanging(value As Integer)
    End Sub
    Partial Private Sub OnDNI_aluChanged()
    End Sub
    Partial Private Sub Onfecha_inscripcion_aluChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onfecha_inscripcion_aluChanged()
    End Sub
    Partial Private Sub Onfecha_nac_aluChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onfecha_nac_aluChanged()
    End Sub
    Partial Private Sub Onmail_aluChanging(value As String)
    End Sub
    Partial Private Sub Onmail_aluChanged()
    End Sub
    Partial Private Sub Onnomb_ape_tutorChanging(value As String)
    End Sub
    Partial Private Sub Onnomb_ape_tutorChanged()
    End Sub
    Partial Private Sub Ondni_tutorChanging(value As Integer)
    End Sub
    Partial Private Sub Ondni_tutorChanged()
    End Sub
    Partial Private Sub Ontelefono_tutorChanging(value As String)
    End Sub
    Partial Private Sub Ontelefono_tutorChanged()
    End Sub
    Partial Private Sub Onfoto_aluChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub Onfoto_aluChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Alumno_x_curso = New EntitySet(Of Alumno_x_curso)(AddressOf Me.attach_Alumno_x_curso, AddressOf Me.detach_Alumno_x_curso)
		Me._Alumno_x_materia = New EntitySet(Of Alumno_x_materia)(AddressOf Me.attach_Alumno_x_materia, AddressOf Me.detach_Alumno_x_materia)
		Me._Asistencia_alumnos = New EntitySet(Of Asistencia_alumnos)(AddressOf Me.attach_Asistencia_alumnos, AddressOf Me.detach_Asistencia_alumnos)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_alumno", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_alumno() As Integer
		Get
			Return Me._id_alumno
		End Get
		Set
			If ((Me._id_alumno = value)  _
						= false) Then
				Me.Onid_alumnoChanging(value)
				Me.SendPropertyChanging
				Me._id_alumno = value
				Me.SendPropertyChanged("id_alumno")
				Me.Onid_alumnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nombre_alu", DbType:="VarChar(50)")>  _
	Public Property nombre_alu() As String
		Get
			Return Me._nombre_alu
		End Get
		Set
			If (String.Equals(Me._nombre_alu, value) = false) Then
				Me.Onnombre_aluChanging(value)
				Me.SendPropertyChanging
				Me._nombre_alu = value
				Me.SendPropertyChanged("nombre_alu")
				Me.Onnombre_aluChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_apellido_alu", DbType:="VarChar(50)")>  _
	Public Property apellido_alu() As String
		Get
			Return Me._apellido_alu
		End Get
		Set
			If (String.Equals(Me._apellido_alu, value) = false) Then
				Me.Onapellido_aluChanging(value)
				Me.SendPropertyChanging
				Me._apellido_alu = value
				Me.SendPropertyChanged("apellido_alu")
				Me.Onapellido_aluChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_domicilio", DbType:="VarChar(50)")>  _
	Public Property domicilio() As String
		Get
			Return Me._domicilio
		End Get
		Set
			If (String.Equals(Me._domicilio, value) = false) Then
				Me.OndomicilioChanging(value)
				Me.SendPropertyChanging
				Me._domicilio = value
				Me.SendPropertyChanged("domicilio")
				Me.OndomicilioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DNI_alu", DbType:="Int NOT NULL")>  _
	Public Property DNI_alu() As Integer
		Get
			Return Me._DNI_alu
		End Get
		Set
			If ((Me._DNI_alu = value)  _
						= false) Then
				Me.OnDNI_aluChanging(value)
				Me.SendPropertyChanging
				Me._DNI_alu = value
				Me.SendPropertyChanged("DNI_alu")
				Me.OnDNI_aluChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fecha_inscripcion_alu", DbType:="Date")>  _
	Public Property fecha_inscripcion_alu() As System.Nullable(Of Date)
		Get
			Return Me._fecha_inscripcion_alu
		End Get
		Set
			If (Me._fecha_inscripcion_alu.Equals(value) = false) Then
				Me.Onfecha_inscripcion_aluChanging(value)
				Me.SendPropertyChanging
				Me._fecha_inscripcion_alu = value
				Me.SendPropertyChanged("fecha_inscripcion_alu")
				Me.Onfecha_inscripcion_aluChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fecha_nac_alu", DbType:="Date")>  _
	Public Property fecha_nac_alu() As System.Nullable(Of Date)
		Get
			Return Me._fecha_nac_alu
		End Get
		Set
			If (Me._fecha_nac_alu.Equals(value) = false) Then
				Me.Onfecha_nac_aluChanging(value)
				Me.SendPropertyChanging
				Me._fecha_nac_alu = value
				Me.SendPropertyChanged("fecha_nac_alu")
				Me.Onfecha_nac_aluChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mail_alu", DbType:="VarChar(50)")>  _
	Public Property mail_alu() As String
		Get
			Return Me._mail_alu
		End Get
		Set
			If (String.Equals(Me._mail_alu, value) = false) Then
				Me.Onmail_aluChanging(value)
				Me.SendPropertyChanging
				Me._mail_alu = value
				Me.SendPropertyChanged("mail_alu")
				Me.Onmail_aluChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nomb_ape_tutor", DbType:="VarChar(50)")>  _
	Public Property nomb_ape_tutor() As String
		Get
			Return Me._nomb_ape_tutor
		End Get
		Set
			If (String.Equals(Me._nomb_ape_tutor, value) = false) Then
				Me.Onnomb_ape_tutorChanging(value)
				Me.SendPropertyChanging
				Me._nomb_ape_tutor = value
				Me.SendPropertyChanged("nomb_ape_tutor")
				Me.Onnomb_ape_tutorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dni_tutor", DbType:="Int NOT NULL")>  _
	Public Property dni_tutor() As Integer
		Get
			Return Me._dni_tutor
		End Get
		Set
			If ((Me._dni_tutor = value)  _
						= false) Then
				Me.Ondni_tutorChanging(value)
				Me.SendPropertyChanging
				Me._dni_tutor = value
				Me.SendPropertyChanged("dni_tutor")
				Me.Ondni_tutorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_telefono_tutor", DbType:="VarChar(20)")>  _
	Public Property telefono_tutor() As String
		Get
			Return Me._telefono_tutor
		End Get
		Set
			If (String.Equals(Me._telefono_tutor, value) = false) Then
				Me.Ontelefono_tutorChanging(value)
				Me.SendPropertyChanging
				Me._telefono_tutor = value
				Me.SendPropertyChanged("telefono_tutor")
				Me.Ontelefono_tutorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_foto_alu", DbType:="Image", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property foto_alu() As System.Data.Linq.Binary
		Get
			Return Me._foto_alu
		End Get
		Set
			If (Object.Equals(Me._foto_alu, value) = false) Then
				Me.Onfoto_aluChanging(value)
				Me.SendPropertyChanging
				Me._foto_alu = value
				Me.SendPropertyChanged("foto_alu")
				Me.Onfoto_aluChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Alumno_Alumno_x_curso", Storage:="_Alumno_x_curso", ThisKey:="id_alumno", OtherKey:="id_alumno")>  _
	Public Property Alumno_x_curso() As EntitySet(Of Alumno_x_curso)
		Get
			Return Me._Alumno_x_curso
		End Get
		Set
			Me._Alumno_x_curso.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Alumno_Alumno_x_materia", Storage:="_Alumno_x_materia", ThisKey:="id_alumno", OtherKey:="id_alumno")>  _
	Public Property Alumno_x_materia() As EntitySet(Of Alumno_x_materia)
		Get
			Return Me._Alumno_x_materia
		End Get
		Set
			Me._Alumno_x_materia.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Alumno_Asistencia_alumnos", Storage:="_Asistencia_alumnos", ThisKey:="id_alumno", OtherKey:="id_alumno")>  _
	Public Property Asistencia_alumnos() As EntitySet(Of Asistencia_alumnos)
		Get
			Return Me._Asistencia_alumnos
		End Get
		Set
			Me._Asistencia_alumnos.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Alumno_x_curso(ByVal entity As Alumno_x_curso)
		Me.SendPropertyChanging
		entity.Alumno = Me
	End Sub
	
	Private Sub detach_Alumno_x_curso(ByVal entity As Alumno_x_curso)
		Me.SendPropertyChanging
		entity.Alumno = Nothing
	End Sub
	
	Private Sub attach_Alumno_x_materia(ByVal entity As Alumno_x_materia)
		Me.SendPropertyChanging
		entity.Alumno = Me
	End Sub
	
	Private Sub detach_Alumno_x_materia(ByVal entity As Alumno_x_materia)
		Me.SendPropertyChanging
		entity.Alumno = Nothing
	End Sub
	
	Private Sub attach_Asistencia_alumnos(ByVal entity As Asistencia_alumnos)
		Me.SendPropertyChanging
		entity.Alumno = Me
	End Sub
	
	Private Sub detach_Asistencia_alumnos(ByVal entity As Asistencia_alumnos)
		Me.SendPropertyChanging
		entity.Alumno = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Usuario1")>  _
Partial Public Class Usuario1
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_usuario As Integer
	
	Private _id_personal As Integer
	
	Private _nombre_usuario As String
	
	Private _contraseña As String
	
	Private _perfil As String
	
	Private _Personal As EntityRef(Of Personal)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_usuarioChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_usuarioChanged()
    End Sub
    Partial Private Sub Onid_personalChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_personalChanged()
    End Sub
    Partial Private Sub Onnombre_usuarioChanging(value As String)
    End Sub
    Partial Private Sub Onnombre_usuarioChanged()
    End Sub
    Partial Private Sub OncontraseñaChanging(value As String)
    End Sub
    Partial Private Sub OncontraseñaChanged()
    End Sub
    Partial Private Sub OnperfilChanging(value As String)
    End Sub
    Partial Private Sub OnperfilChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Personal = CType(Nothing, EntityRef(Of Personal))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_usuario", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_usuario() As Integer
		Get
			Return Me._id_usuario
		End Get
		Set
			If ((Me._id_usuario = value)  _
						= false) Then
				Me.Onid_usuarioChanging(value)
				Me.SendPropertyChanging
				Me._id_usuario = value
				Me.SendPropertyChanged("id_usuario")
				Me.Onid_usuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_personal", DbType:="Int NOT NULL")>  _
	Public Property id_personal() As Integer
		Get
			Return Me._id_personal
		End Get
		Set
			If ((Me._id_personal = value)  _
						= false) Then
				If Me._Personal.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_personalChanging(value)
				Me.SendPropertyChanging
				Me._id_personal = value
				Me.SendPropertyChanged("id_personal")
				Me.Onid_personalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nombre_usuario", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property nombre_usuario() As String
		Get
			Return Me._nombre_usuario
		End Get
		Set
			If (String.Equals(Me._nombre_usuario, value) = false) Then
				Me.Onnombre_usuarioChanging(value)
				Me.SendPropertyChanging
				Me._nombre_usuario = value
				Me.SendPropertyChanged("nombre_usuario")
				Me.Onnombre_usuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_contraseña", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property contraseña() As String
		Get
			Return Me._contraseña
		End Get
		Set
			If (String.Equals(Me._contraseña, value) = false) Then
				Me.OncontraseñaChanging(value)
				Me.SendPropertyChanging
				Me._contraseña = value
				Me.SendPropertyChanged("contraseña")
				Me.OncontraseñaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_perfil", DbType:="NVarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property perfil() As String
		Get
			Return Me._perfil
		End Get
		Set
			If (String.Equals(Me._perfil, value) = false) Then
				Me.OnperfilChanging(value)
				Me.SendPropertyChanging
				Me._perfil = value
				Me.SendPropertyChanged("perfil")
				Me.OnperfilChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Personal_Usuario1", Storage:="_Personal", ThisKey:="id_personal", OtherKey:="id_personal", IsForeignKey:=true)>  _
	Public Property Personal() As Personal
		Get
			Return Me._Personal.Entity
		End Get
		Set
			Dim previousValue As Personal = Me._Personal.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Personal.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Personal.Entity = Nothing
					previousValue.Usuario1.Remove(Me)
				End If
				Me._Personal.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Usuario1.Add(Me)
					Me._id_personal = value.id_personal
				Else
					Me._id_personal = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("Personal")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Profesor_x_Materia")>  _
Partial Public Class Profesor_x_Materia
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_profesor_materia As Integer
	
	Private _id_personal As Integer
	
	Private _id_materia As Integer
	
	Private _id_curso As Integer
	
	Private _cant_hs_catedra As Integer
	
	Private _Curso As EntityRef(Of Curso)
	
	Private _Personal As EntityRef(Of Personal)
	
	Private _Materia As EntityRef(Of Materia)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_profesor_materiaChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_profesor_materiaChanged()
    End Sub
    Partial Private Sub Onid_personalChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_personalChanged()
    End Sub
    Partial Private Sub Onid_materiaChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_materiaChanged()
    End Sub
    Partial Private Sub Onid_cursoChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_cursoChanged()
    End Sub
    Partial Private Sub Oncant_hs_catedraChanging(value As Integer)
    End Sub
    Partial Private Sub Oncant_hs_catedraChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Curso = CType(Nothing, EntityRef(Of Curso))
		Me._Personal = CType(Nothing, EntityRef(Of Personal))
		Me._Materia = CType(Nothing, EntityRef(Of Materia))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_profesor_materia", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_profesor_materia() As Integer
		Get
			Return Me._id_profesor_materia
		End Get
		Set
			If ((Me._id_profesor_materia = value)  _
						= false) Then
				Me.Onid_profesor_materiaChanging(value)
				Me.SendPropertyChanging
				Me._id_profesor_materia = value
				Me.SendPropertyChanged("id_profesor_materia")
				Me.Onid_profesor_materiaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_personal", DbType:="Int NOT NULL")>  _
	Public Property id_personal() As Integer
		Get
			Return Me._id_personal
		End Get
		Set
			If ((Me._id_personal = value)  _
						= false) Then
				If Me._Personal.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_personalChanging(value)
				Me.SendPropertyChanging
				Me._id_personal = value
				Me.SendPropertyChanged("id_personal")
				Me.Onid_personalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_materia", DbType:="Int NOT NULL")>  _
	Public Property id_materia() As Integer
		Get
			Return Me._id_materia
		End Get
		Set
			If ((Me._id_materia = value)  _
						= false) Then
				If Me._Materia.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_materiaChanging(value)
				Me.SendPropertyChanging
				Me._id_materia = value
				Me.SendPropertyChanged("id_materia")
				Me.Onid_materiaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_curso", DbType:="Int NOT NULL")>  _
	Public Property id_curso() As Integer
		Get
			Return Me._id_curso
		End Get
		Set
			If ((Me._id_curso = value)  _
						= false) Then
				If Me._Curso.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_cursoChanging(value)
				Me.SendPropertyChanging
				Me._id_curso = value
				Me.SendPropertyChanged("id_curso")
				Me.Onid_cursoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cant_hs_catedra", DbType:="Int NOT NULL")>  _
	Public Property cant_hs_catedra() As Integer
		Get
			Return Me._cant_hs_catedra
		End Get
		Set
			If ((Me._cant_hs_catedra = value)  _
						= false) Then
				Me.Oncant_hs_catedraChanging(value)
				Me.SendPropertyChanging
				Me._cant_hs_catedra = value
				Me.SendPropertyChanged("cant_hs_catedra")
				Me.Oncant_hs_catedraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Curso_Profesor_x_Materia", Storage:="_Curso", ThisKey:="id_curso", OtherKey:="id_curso", IsForeignKey:=true)>  _
	Public Property Curso() As Curso
		Get
			Return Me._Curso.Entity
		End Get
		Set
			Dim previousValue As Curso = Me._Curso.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Curso.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Curso.Entity = Nothing
					previousValue.Profesor_x_Materia.Remove(Me)
				End If
				Me._Curso.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Profesor_x_Materia.Add(Me)
					Me._id_curso = value.id_curso
				Else
					Me._id_curso = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("Curso")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Personal_Profesor_x_Materia", Storage:="_Personal", ThisKey:="id_personal", OtherKey:="id_personal", IsForeignKey:=true)>  _
	Public Property Personal() As Personal
		Get
			Return Me._Personal.Entity
		End Get
		Set
			Dim previousValue As Personal = Me._Personal.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Personal.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Personal.Entity = Nothing
					previousValue.Profesor_x_Materia.Remove(Me)
				End If
				Me._Personal.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Profesor_x_Materia.Add(Me)
					Me._id_personal = value.id_personal
				Else
					Me._id_personal = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("Personal")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Materia_Profesor_x_Materia", Storage:="_Materia", ThisKey:="id_materia", OtherKey:="id_materia", IsForeignKey:=true)>  _
	Public Property Materia() As Materia
		Get
			Return Me._Materia.Entity
		End Get
		Set
			Dim previousValue As Materia = Me._Materia.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Materia.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Materia.Entity = Nothing
					previousValue.Profesor_x_Materia.Remove(Me)
				End If
				Me._Materia.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Profesor_x_Materia.Add(Me)
					Me._id_materia = value.id_materia
				Else
					Me._id_materia = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("Materia")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Materia")>  _
Partial Public Class Materia
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_materia As Integer
	
	Private _codigo_materia As String
	
	Private _nombre_materia As String
	
	Private _especialidad_textbox As String
	
	Private _Alumno_x_materia As EntitySet(Of Alumno_x_materia)
	
	Private _Profesor_x_Materia As EntitySet(Of Profesor_x_Materia)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_materiaChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_materiaChanged()
    End Sub
    Partial Private Sub Oncodigo_materiaChanging(value As String)
    End Sub
    Partial Private Sub Oncodigo_materiaChanged()
    End Sub
    Partial Private Sub Onnombre_materiaChanging(value As String)
    End Sub
    Partial Private Sub Onnombre_materiaChanged()
    End Sub
    Partial Private Sub Onespecialidad_textboxChanging(value As String)
    End Sub
    Partial Private Sub Onespecialidad_textboxChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Alumno_x_materia = New EntitySet(Of Alumno_x_materia)(AddressOf Me.attach_Alumno_x_materia, AddressOf Me.detach_Alumno_x_materia)
		Me._Profesor_x_Materia = New EntitySet(Of Profesor_x_Materia)(AddressOf Me.attach_Profesor_x_Materia, AddressOf Me.detach_Profesor_x_Materia)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_materia", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_materia() As Integer
		Get
			Return Me._id_materia
		End Get
		Set
			If ((Me._id_materia = value)  _
						= false) Then
				Me.Onid_materiaChanging(value)
				Me.SendPropertyChanging
				Me._id_materia = value
				Me.SendPropertyChanged("id_materia")
				Me.Onid_materiaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_codigo_materia", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property codigo_materia() As String
		Get
			Return Me._codigo_materia
		End Get
		Set
			If (String.Equals(Me._codigo_materia, value) = false) Then
				Me.Oncodigo_materiaChanging(value)
				Me.SendPropertyChanging
				Me._codigo_materia = value
				Me.SendPropertyChanged("codigo_materia")
				Me.Oncodigo_materiaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nombre_materia", DbType:="NVarChar(40) NOT NULL", CanBeNull:=false)>  _
	Public Property nombre_materia() As String
		Get
			Return Me._nombre_materia
		End Get
		Set
			If (String.Equals(Me._nombre_materia, value) = false) Then
				Me.Onnombre_materiaChanging(value)
				Me.SendPropertyChanging
				Me._nombre_materia = value
				Me.SendPropertyChanged("nombre_materia")
				Me.Onnombre_materiaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_especialidad_textbox", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property especialidad_textbox() As String
		Get
			Return Me._especialidad_textbox
		End Get
		Set
			If (String.Equals(Me._especialidad_textbox, value) = false) Then
				Me.Onespecialidad_textboxChanging(value)
				Me.SendPropertyChanging
				Me._especialidad_textbox = value
				Me.SendPropertyChanged("especialidad_textbox")
				Me.Onespecialidad_textboxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Materia_Alumno_x_materia", Storage:="_Alumno_x_materia", ThisKey:="id_materia", OtherKey:="id_materia")>  _
	Public Property Alumno_x_materia() As EntitySet(Of Alumno_x_materia)
		Get
			Return Me._Alumno_x_materia
		End Get
		Set
			Me._Alumno_x_materia.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Materia_Profesor_x_Materia", Storage:="_Profesor_x_Materia", ThisKey:="id_materia", OtherKey:="id_materia")>  _
	Public Property Profesor_x_Materia() As EntitySet(Of Profesor_x_Materia)
		Get
			Return Me._Profesor_x_Materia
		End Get
		Set
			Me._Profesor_x_Materia.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Alumno_x_materia(ByVal entity As Alumno_x_materia)
		Me.SendPropertyChanging
		entity.Materia = Me
	End Sub
	
	Private Sub detach_Alumno_x_materia(ByVal entity As Alumno_x_materia)
		Me.SendPropertyChanging
		entity.Materia = Nothing
	End Sub
	
	Private Sub attach_Profesor_x_Materia(ByVal entity As Profesor_x_Materia)
		Me.SendPropertyChanging
		entity.Materia = Me
	End Sub
	
	Private Sub detach_Profesor_x_Materia(ByVal entity As Profesor_x_Materia)
		Me.SendPropertyChanging
		entity.Materia = Nothing
	End Sub
End Class
